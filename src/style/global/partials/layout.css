@media (prefers-color-scheme: light) {
    .content-grid :is(h2, h3, h4, h5, h6) {
        color: var(--color-gray-800);
    }

    .content-grid p {
        color: var(--color-gray-700);
    }
}

@media (prefers-color-scheme: dark) {
    .content-grid :is(h2, h3, h4, h5, h6) {
        color: var(--color-gray-200);
    }

    .content-grid p {
        color: var(--color-gray-300);
    }
}

.content-grid :is(h1, h2, h3, h4) {
    width: 50%;
    text-wrap: pretty;
}

.content-grid,
.content-full-width {
    --padding-inline: 1rem;
    --content-max-width: 1024px;
    --breakout-max-width: 1280px;

    --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

    display: grid;
    grid-template-columns:
        [full-width-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] min(100% - (var(--padding-inline) * 2), var(--content-max-width)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid>:not(.content-breakout, .content-full-width),
.content-full-width>:not(.content-breakout, .content-full-width) {
    grid-column: content;
}

.content-grid>.content-breakout {
    grid-column: breakout;
}

.content-grid>.content-full-width {
    grid-column: full-width;
    display: grid;
    grid-template-columns: inherit;
}

.content-grid :is(h1, h2, h3, h4, h5, h6):has(+:is(h1, h2, h3, h4, h5, h6, p)),
.content-grid :is(h1, h2, h3, h4, h5, h6)+:is(h1, h2, h3, h4, h5, h6, p):not(:last-child) {
    margin-bottom: 1.5rem;
}

.content-grid p:has(+p),
.content-grid p+p:not(:last-child) {
    margin-bottom: 1rem;
}

.content-grid>section:not(.main-background) {
    padding-block: 2.625rem;
}

@media (prefers-color-scheme: light) {
    .content-grid>section.primary {
        background-color: var(--color-accent);
    }
}

@media (prefers-color-scheme: dark) {
    .content-grid>section.primary {
        background-color: var(--color-primary);
    }
}
